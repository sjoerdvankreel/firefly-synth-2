- pitch/frequency targets:
* coarse pitch: voice level, osci level, global uni level, master pitch bend
* fine pitch: voice level, osci level, global uni detune, osci unison detune
* osci: hard sync slave pitch
* osci: dedicated FM osci ratio (not inter-osci, thats just FM index)
* filter keyboard tracking
* voice-level portamento

- current thought in "retune(note + A) + B" mode (A = "patch"/"yes retune", B = "performance"/"not retune"):
* all fine pitch goes in "B"
* hard sync: sort of pitch-sweep, so this goes in "B"
* portamento: this goes in "A". Slide from retuned note to retuned note.
* linear FM goes in neither, just keep the frequency ratios intact
* exponential FM: if i did it correctly, this is just an audio-rate pitch modulator, so goes in "B" just like a vibrato. besides, results are inharmonic even when not retuned.
* hypothetical: FF1 has an arpeggiator, FF2 does not. If i re-introduce it, this goes in "A".

The hard ones are all of the coarse pitch targets.
A) If i make a pitch sweep, don't retune.
B) If i use a pitch env to create a kick, don't retune.
C) If i use master pitch bend range +/-12 semis => can go either way.
D) If i set osci 1 coarse pitch to +0 semis, osci 2 to +12, YES retune.
E) If i use global unison, 3 voices, coarse pitch +0, +5, +8 semis (hit a note, play a chord) => YES retune.

And of course here's the kicker:
If i am in either D) or E), then apply an LFO to coarse pitch:
F) Now i have a sinusoid going between +0 and +12 semis.
Gut feeling says, don't bother, because now it went from the "patch" bucket to the "performance" bucket.

Question: All in all i think i'm best off by having some sort of "retune all coarse pitch (together, at once) yes/no" switch?
Possibly with a separate switch for pitch bend + all the rest.

And finally -- filter keyboard tracking.
The way i do it now is to let the user specify a base key as the tracking base (say, "c4"), along with a tracking amount (+/-200%).
So example: base key = c3, note played = c5, diff = 24 semis, frequency ratio = 400%, tracking amount = 50%, filter frequency gets multiplied by 2.
This works well enough, but i'm not totally convinced this holds up in above mentioned D) and E) cases (because those modulators are not taken into account).
I could switch that scheme to compare not "note played" but "active coarse pitch (voice level, not osci level)" against "base key".
Such a setup would imply f.e. that an lfo thrown to voice coarse pitch would affect the filter keytracking.
All this is even without retuning - but i mention it because in the context of filters, i feel that microtuning
is a pitch modulator like any other. Which of course means, to calculate keytracking amount, i need to take into
account both retuning and coarse pitch modulators. Which leads me to:

G) Do you think that's even worth it? Just by the looks of it, again gut feeling says filters go in the "B" bucket.
I sincerely hope you agree here because that makes my life that much easier. AKA: filter keytracking 200%
does NOT mean "i rely on 2 octaves up being exactly 4 times more filter freq" but rather "i want brighter highs".











